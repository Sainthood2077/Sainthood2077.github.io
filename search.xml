<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MVT和MVC的区别</title>
      <link href="/2022/10/06/mvt-he-mvc-de-qu-bie/"/>
      <url>/2022/10/06/mvt-he-mvc-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<h2 id="1-理解MVT和MVC"><a href="#1-理解MVT和MVC" class="headerlink" title="1.理解MVT和MVC"></a>1.理解MVT和MVC</h2><h3 id="MVC（Model-View-Controller-模型-视图-控制器）"><a href="#MVC（Model-View-Controller-模型-视图-控制器）" class="headerlink" title="MVC（Model View Controller 模型-视图-控制器）"></a>MVC（Model View Controller 模型-视图-控制器）</h3><p>特点：把业务逻辑、模型数据、用户界面分离开来，让开发者将数据与表现**<u>解耦</u>**。</p><p>解耦：降低各功能模块之间的耦合性，方便变更，更容易重构代码，最大程度上实现代码的重用</p><p>Model： 代表数据存取层，</p><p>View 代表的是系统中选择显示什么和怎么显示的部分，</p><p>Controller 指的是系统中根据用户输入并视需要访问模型，以决定使用哪个视图的那部分。</p><p><img src="https://gitee.com/sainthood2077/cloudimg/raw/main/images/image-20221006112114601.png" alt="image-20221006112114601"></p><p>客户端发送请求，通过控制台分发请求，将请求发到数据库中，通过实体类，它与数据库具有一一对应的关系<br>然后数据库返回数据，将数据封装成对象，返回到控制器，控制器将其渲染到页面上，返回给客户。</p><h3 id="MVT（Model-View-Templates-模型-视图-模板）"><a href="#MVT（Model-View-Templates-模型-视图-模板）" class="headerlink" title="MVT（Model View Templates 模型-视图-模板）"></a>MVT（Model View Templates 模型-视图-模板）</h3><p>Models：数据存取层。 该层处理与数据相关的所有事务： 如何存取、如何验证有效，是一个抽象层，用来构建和操作你的web应用中的数据，模型是你的数据的唯一的、权威的信息源。它包含你所储存数据的必要字段和行为。通常，每个模型对应数据库中唯一的一张表。</p><p>视图（views）：业务逻辑层，该层包含存取模型及调取恰当模板的相关逻辑。用于封装负责处理用户请求及返回响应的逻辑。视图可以看作是前端与数据库的中间人，他会将前端想要的数据从数据库中读出来给前端。他也会将用户要想保存的数据写到数据库。</p><p>模板(templates)：即表现层。 该层处理与表现相关的决定： 如何在页面或其他类型文档中进行显示。模板层提供了设计友好的语法来展示信息给用户。使用模板方法可以动态地生成HTML。模板包含所需HTML 输出的静态部分，以及一些特殊的语法，描述如何将动态内容插入。</p><p><img src="https://gitee.com/sainthood2077/cloudimg/raw/main/images/image-20221006112038348.png" alt="image-20221006112038348"></p><p>客户端发送请求，django路由分发请求，视图函数接收参数，控制流程，通过实体类（与数据库有映射关系）将请求发送到<br>数据库中，数据库返回数据，将数据在MODL层封装成对象，返回到视图函数，视图函数将其渲染到模板层（页面），返回<br>给客户端。</p><h2 id="2-区别："><a href="#2-区别：" class="headerlink" title="2.区别："></a>2.区别：</h2><p>​        MVC中的View的目的是「呈现哪一个数据」，而MTV的View的目的是「数据如何呈现」。也就是把MVT中的View分成了视图（展现哪些数据）和模板（如何展现）2个部分，而Contorller这个要素由框架自己来实现了，我们需要做的就是把（带正则表达式的）URL对应到视图就可以了，通过这样的URL配置，系统将一个请求发送到一个合适的视图。</p><p>MVC（控制层用来接收参数，控制流程，分发请求），MVT（模板层用来展示页面，省去了分发请求的步骤，将其交给了django路由）</p>]]></content>
      
      
      
        <tags>
            
            <tag> Django模型 </tag>
            
            <tag> MVT </tag>
            
            <tag> MVC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django项目学习</title>
      <link href="/2022/10/04/django-xiang-mu-xue-xi/"/>
      <url>/2022/10/04/django-xiang-mu-xue-xi/</url>
      
        <content type="html"><![CDATA[<p>今天开始学习Django，再此记录一下学习过程以便过后复习查看</p><h2 id="一、安装Django"><a href="#一、安装Django" class="headerlink" title="一、安装Django"></a>一、安装Django</h2><pre class=" language-python"><code class="language-python">pip install django</code></pre><h2 id="二、生成Django"><a href="#二、生成Django" class="headerlink" title="二、生成Django"></a>二、生成Django</h2><p>首先尽量没有中文路径的Django</p><pre class=" language-python"><code class="language-python"><span class="token string">"D:\Ananconda3\Anaconda\Scripts\django-admin.exe"</span> startproject 项目名称<span class="token comment" spellcheck="true"># 如果"D:\Ananconda3\Anaconda\Scripts\"已经加入环境变量</span>django<span class="token operator">-</span>admin<span class="token punctuation">.</span>exe startporject 项目名称</code></pre><p>创建成功截图：</p><p><img src="https://gitee.com/sainthood2077/cloudimg/raw/main/images/image-20221005000620128.png" alt="image-20221005000620128"></p><h2 id="三、文件说明"><a href="#三、文件说明" class="headerlink" title="三、文件说明"></a>三、文件说明</h2><pre><code>WMS │─manage.py           [项目的管理、启动、创建APP][无需修改，经常使用] │ └─WMS                 [项目名同名文件夹]      │─asgi.py        [接受网络请求][无需修改]      │─settings.py    [配置文件][数据库配置，时区，安装的APP，中间件，日志配置，以及一些基本的目录配置]      │─urls.py           [包含一个urlpatterns变量，其实它就是一个URLDispacher（URL分派器）,用于在URL和实际的view之间建立一个映射]      │─wsgi.py           [接受网络请求][无需修改]      └─__init__.py    [说明内部的WMS目录是一个python模块]</code></pre><h2 id="四、APP概念"><a href="#四、APP概念" class="headerlink" title="四、APP概念"></a>四、APP概念</h2><h4 id="1、作用"><a href="#1、作用" class="headerlink" title="1、作用"></a>1、作用</h4><p>APP相当于一个相对独立的功能模块，其遵循的设计理念是MVT（类似MVC）；在一个大型的Project中，可以包含很多APP，而且每个APP可以在不同的Project中复用，这也符合Django的编程理念，即：不要做重复的事情。</p><p>并且每个APP都有独立的表结构、函数、HTML模板、CSS</p><h3 id="2、创建"><a href="#2、创建" class="headerlink" title="2、创建"></a>2、创建</h3><pre class=" language-python"><code class="language-python">python manage<span class="token punctuation">.</span>py startapp app名称</code></pre><h3 id="3、APP目录结构"><a href="#3、APP目录结构" class="headerlink" title="3、APP目录结构"></a>3、APP目录结构</h3><pre><code>wmsapp    │  admin.py          [无需修改][默认提供的admin后台]    │  apps.py           [无需修改]    │  models.py         [操作数据库，ORM]    │  tests.py          [无需修改][单元测试]    │  views.py          [URL Dispacher即将URL请求映射到这个文件中的函数或类方法上]    │  __init__.py       [说明polls目录是一个python模块]    │    └─migrations        [记录数据库变更]            __init__.py</code></pre><h2 id="五、项目部署"><a href="#五、项目部署" class="headerlink" title="五、项目部署"></a>五、项目部署</h2><h3 id="1-注册APP"><a href="#1-注册APP" class="headerlink" title="1.注册APP"></a>1.注册APP</h3><p>/WMS/settings.py</p><pre class=" language-python"><code class="language-python">INSTALLED_APPS <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">"django.contrib.admin"</span><span class="token punctuation">,</span>    <span class="token string">"django.contrib.auth"</span><span class="token punctuation">,</span>    <span class="token string">"django.contrib.contenttypes"</span><span class="token punctuation">,</span>    <span class="token string">"django.contrib.sessions"</span><span class="token punctuation">,</span>    <span class="token string">"django.contrib.messages"</span><span class="token punctuation">,</span>    <span class="token string">"django.contrib.staticfiles"</span><span class="token punctuation">,</span>    <span class="token string">"wmsapp.apps.appconfig"</span><span class="token punctuation">,</span>           <span class="token operator">&lt;</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>插入，即注册成功<span class="token punctuation">]</span></code></pre><h3 id="2-编写url与视图函数的关系"><a href="#2-编写url与视图函数的关系" class="headerlink" title="2.编写url与视图函数的关系"></a>2.编写url与视图函数的关系</h3><p>/WMS/urls.py</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> wmsapp <span class="token keyword">import</span> viewsurlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token comment" spellcheck="true"># path("admin/", admin.site.urls),</span>    <span class="token comment" spellcheck="true"># www.xxx.com/index/</span>    path<span class="token punctuation">(</span><span class="token string">"index/"</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span></code></pre><h3 id="3-编写视图函数"><a href="#3-编写视图函数" class="headerlink" title="3.编写视图函数"></a>3.编写视图函数</h3><p>wmsapp/views.py</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render<span class="token punctuation">,</span>HttpResponse<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> HttpResponse<span class="token punctuation">(</span><span class="token string">"欢迎使用Django！"</span><span class="token punctuation">)</span></code></pre><h3 id="4-启动Django"><a href="#4-启动Django" class="headerlink" title="4.启动Django"></a>4.启动Django</h3><h4 id="1、代码启动"><a href="#1、代码启动" class="headerlink" title="1、代码启动"></a>1、代码启动</h4><pre class=" language-python"><code class="language-python">python manage<span class="token punctuation">.</span>py runserver</code></pre><h4 id="2、项目启动"><a href="#2、项目启动" class="headerlink" title="2、项目启动"></a>2、项目启动</h4><p><img src="https://gitee.com/sainthood2077/cloudimg/raw/main/images/image-20221007100945752.png" alt="image-20221007100945752"></p><p>运行成功</p><p><img src="https://gitee.com/sainthood2077/cloudimg/raw/main/images/image-20221007100900404.png" alt="image-20221007100900404"></p><h3 id="5、创建页面"><a href="#5、创建页面" class="headerlink" title="5、创建页面"></a>5、创建页面</h3><p>wmsapp/  新建templates文件夹</p><p><img src="https://gitee.com/sainthood2077/cloudimg/raw/main/images/image-20221007102243886.png" alt="image-20221007102243886"></p><p>根据app的注册顺序，注意搜索他们templates下的文件</p><h3 id="6、静态文件"><a href="#6、静态文件" class="headerlink" title="6、静态文件"></a>6、静态文件</h3><p>wasapp/ 新建static文件夹，下存放CSS、js、图片</p><p>引入：</p><p><img src="https://gitee.com/sainthood2077/cloudimg/raw/main/images/image-20221007104813123.png" alt="image-20221007104813123"></p><h2 id="六、模板语法"><a href="#六、模板语法" class="headerlink" title="六、模板语法"></a>六、模板语法</h2><p>views.py</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">user_list</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    n1 <span class="token operator">=</span> <span class="token string">"lisi"</span>    n2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"zhangsan"</span><span class="token punctuation">,</span><span class="token string">"wangwu"</span><span class="token punctuation">,</span><span class="token string">"xiaoming"</span><span class="token punctuation">]</span>    n3 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"mingzi"</span><span class="token punctuation">:</span><span class="token string">"lizhi"</span><span class="token punctuation">,</span><span class="token string">"nianling"</span><span class="token punctuation">:</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token string">"zhiwei"</span><span class="token punctuation">:</span><span class="token string">"laoban"</span><span class="token punctuation">}</span>    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span><span class="token string">"user_list.html"</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">"n1"</span><span class="token punctuation">:</span>n1<span class="token punctuation">,</span><span class="token string">"n2"</span><span class="token punctuation">:</span>n2<span class="token punctuation">,</span><span class="token string">"n3"</span><span class="token punctuation">:</span>n3<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>user_list.html</p><pre class=" language-python"><code class="language-python"><span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> n3 <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> n3<span class="token punctuation">.</span>mingzi <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> n3<span class="token punctuation">.</span>nianling <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> n3<span class="token punctuation">.</span>zhiwei <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> n3<span class="token punctuation">.</span>keys <span class="token operator">%</span><span class="token punctuation">}</span>        <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> item <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token punctuation">{</span><span class="token operator">%</span> endfor <span class="token operator">%</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> n3<span class="token punctuation">.</span>values <span class="token operator">%</span><span class="token punctuation">}</span>        <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> item <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token punctuation">{</span><span class="token operator">%</span> endfor <span class="token operator">%</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> k<span class="token punctuation">,</span>v <span class="token keyword">in</span> n3<span class="token punctuation">.</span>items <span class="token operator">%</span><span class="token punctuation">}</span>    <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> k <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> v <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token punctuation">{</span><span class="token operator">%</span> endfor <span class="token operator">%</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>hr<span class="token operator">></span><span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> n1 <span class="token operator">==</span> <span class="token string">"lisi"</span> <span class="token operator">%</span><span class="token punctuation">}</span>        <span class="token operator">&lt;</span>span<span class="token operator">></span>n1是lisi<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">else</span> <span class="token operator">%</span><span class="token punctuation">}</span>        <span class="token operator">&lt;</span>span<span class="token operator">></span>n1不是lisi<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></code></pre><h2 id="七、ORM数据库操作"><a href="#七、ORM数据库操作" class="headerlink" title="七、ORM数据库操作"></a>七、ORM数据库操作</h2><p><img src="https://gitee.com/sainthood2077/cloudimg/raw/main/images/image-20221007154916296.png" alt="image-20221007154916296"></p><h3 id="1-安装mysqlclient"><a href="#1-安装mysqlclient" class="headerlink" title="1.安装mysqlclient"></a>1.安装mysqlclient</h3><pre class=" language-python"><code class="language-python">pip install mysqlclient</code></pre><p>windows系统安装错误的可以进入mysqlclient下载安装包安装</p><h3 id="2-ORM"><a href="#2-ORM" class="headerlink" title="2.ORM"></a>2.ORM</h3><ul><li>无需写sql语句</li><li>可以增删改查数据表</li><li><strong>无法创建数据库（需要手动创建）</strong></li></ul><h3 id="3-连接数据库"><a href="#3-连接数据库" class="headerlink" title="3.连接数据库"></a>3.连接数据库</h3><p>WMS/settings.py  将databases修改为下面的代码</p><pre class=" language-python"><code class="language-python">DATABASES <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"default"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token string">"ENGINE"</span><span class="token punctuation">:</span> <span class="token string">"django.db.backends.mysql"</span><span class="token punctuation">,</span>        <span class="token string">"NAME"</span><span class="token punctuation">:</span> <span class="token string">"wmsdb"</span><span class="token punctuation">,</span>        <span class="token string">"USER"</span><span class="token punctuation">:</span> <span class="token string">"root"</span><span class="token punctuation">,</span>        <span class="token string">"PASSWORD"</span><span class="token punctuation">:</span> <span class="token string">"root"</span><span class="token punctuation">,</span>        <span class="token string">"HOST"</span><span class="token punctuation">:</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span>        <span class="token string">"POST"</span><span class="token punctuation">:</span> <span class="token number">3306</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="4-创建表"><a href="#4-创建表" class="headerlink" title="4.创建表"></a>4.创建表</h3><p>wmsapp/Models.py</p><pre class=" language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">UserInfo</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">)</span>    password<span class="token operator">=</span>models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span>    age<span class="token operator">=</span>models<span class="token punctuation">.</span>IntegerField<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>如上代码等同于在数据库里执行：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> app01 userinfo<span class="token punctuation">(</span>    id <span class="token keyword">bigint</span> <span class="token keyword">auto_increment</span> <span class="token keyword">primary</span> <span class="token keyword">key</span>    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    password <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    age <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">python manage<span class="token punctuation">.</span>py makemigrationspython manage<span class="token punctuation">.</span>py migrate</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手动添加Git到右键菜单</title>
      <link href="/2022/09/27/tian-jia-git-bash-here/"/>
      <url>/2022/09/27/tian-jia-git-bash-here/</url>
      
        <content type="html"><![CDATA[<p>由于不知原因，右键没有了Git Bash Here，没有这个右键菜单导致获取Git仓库中的代码很不方便，所以决定通过注册表的方式将这个菜单加出来。</p><p>1、win + R，输入“regedit”，回车打开注册表；</p><p>2、找到 [HKEY_CLASSES_ROOT\Directory\Background]；</p><p>3、在 [Background] 下如果没有 [shell]，则右键-新建项 [shell]；</p><p>4、在 [shell] 下右键-新建项[Git Bash Here]，此为右键菜单显示名称；</p><p>5、在 [Git Bash Here] 下右键-新建-字符串值[Icon],双击编辑，其值为“D:\Git\mingw64\share\git\git-for-windows.ico”。此为菜单加图标，“D:\Git”为安装路径。</p><p>6、在 [Git Bash Here] 下右键-新建-项[command],其值为 “D:\Git\git-bash.exe”。</p><p>然后就能在鼠标右键（win11要打开更多选项）就有显示</p><p>原创链接：<a href="https://www.cnblogs.com/rnckty/p/7607445.html">手动添加 Git bash 到鼠标右键 - 贱书生 - 博客园 (cnblogs.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
          <category> 右键菜单 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
